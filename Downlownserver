package client;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.net.Socket;
import java.util.HashMap;
import java.util.Map;

import com.softeem.clound.ToolsAndUI.MyJFrame;
import com.softeem.clound.ToolsAndUI.Tools;

/**
 * 创建线程回应下载点击事件
 * 
 * @author gq
 *
 */
public class DownlownServer extends Thread {
	/** socket套接字 */
	Socket s;
	/** 用户的下载路径 */
	File file;
	/** 接收传过来的map集合 */
	Map<String, File> map;
	/** 接收文本框内容 */
	String msg;
	/** 接受所有文件信息 */
	String show="";

	public DownlownServer(Socket s, File file) {
		this.s = s;
		this.file = file;
	}

	@Override
	public void run() {
		// 创建线程执行下载任务
		// 反对象序列化（得到map集合）
		Object obj = null;
		try {
			obj = Tools.getObject(s.getInputStream());
		} catch (ClassNotFoundException | IOException e2) {
			// TODO 自动生成的 catch 块
			e2.printStackTrace();
		}
		// 得到Map集合
		map = (HashMap<String, File>) obj;
		// 将服务器文件信息显示到这里
		map.forEach((k, v) -> {
			show = show + "文件名：  " + k + "\n";
		});
		// 将可以下载的文件列出来
		MyJFrame.jt.setText(show);
		// 按钮点击事件下载文件
		MyJFrame.jb1.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				// 将选择的文件名字传给服务端
				try {
					msg = MyJFrame.jt1.getText().trim();
					// 将下载文件名字传给服务器
					Tools.sendMsg(s.getOutputStream(), msg);
					// 将服务端文件下载下来
					File f = new File("");
					// 接收原路径
					f = file;
					file = new File(file, msg);
					// 接收文件
					Tools.getFile(s.getInputStream(), file);
					MyJFrame.j1.setText("下载成功！！！");
					// 恢复原路径可以多次下载
					file = f;
					//关闭套接字
					s.close;
				} catch (IOException e1) {
					e1.printStackTrace();
				}

			}
		});
	}

}
